<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hedgehog.mapper.web_contractMapper" >
  <resultMap id="BaseResultMap" type="com.hedgehog.domain.web_contract" >
    <result column="contractID" property="contractid" jdbcType="INTEGER" />
    <result column="m_id" property="mId" jdbcType="INTEGER" />
    <result column="c_code" property="cCode" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hedgehog.domain.web_contract" extends="BaseResultMap" >
    <result column="c_content" property="cContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    contractID, m_id, c_code
  </sql>
  <sql id="Blob_Column_List" >
    c_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hedgehog.domain.web_contractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from web_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hedgehog.domain.web_contractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from web_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hedgehog.domain.web_contractExample" >
    delete from web_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hedgehog.domain.web_contract" >
    insert into web_contract (contractID, m_id, c_code, 
      c_content)
    values (#{contractid,jdbcType=INTEGER}, #{mId,jdbcType=INTEGER}, #{cCode,jdbcType=INTEGER}, 
      #{cContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hedgehog.domain.web_contract" >
    insert into web_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        contractID,
      </if>
      <if test="mId != null" >
        m_id,
      </if>
      <if test="cCode != null" >
        c_code,
      </if>
      <if test="cContent != null" >
        c_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="mId != null" >
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="cCode != null" >
        #{cCode,jdbcType=INTEGER},
      </if>
      <if test="cContent != null" >
        #{cContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hedgehog.domain.web_contractExample" resultType="java.lang.Integer" >
    select count(*) from web_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update web_contract
    <set >
      <if test="record.contractid != null" >
        contractID = #{record.contractid,jdbcType=INTEGER},
      </if>
      <if test="record.mId != null" >
        m_id = #{record.mId,jdbcType=INTEGER},
      </if>
      <if test="record.cCode != null" >
        c_code = #{record.cCode,jdbcType=INTEGER},
      </if>
      <if test="record.cContent != null" >
        c_content = #{record.cContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update web_contract
    set contractID = #{record.contractid,jdbcType=INTEGER},
      m_id = #{record.mId,jdbcType=INTEGER},
      c_code = #{record.cCode,jdbcType=INTEGER},
      c_content = #{record.cContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update web_contract
    set contractID = #{record.contractid,jdbcType=INTEGER},
      m_id = #{record.mId,jdbcType=INTEGER},
      c_code = #{record.cCode,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
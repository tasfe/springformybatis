<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hedgehog.mapper.biz_AdviseMapper" >
  <resultMap id="BaseResultMap" type="com.hedgehog.domain.biz_Advise" >
    <id column="AdviseID" property="adviseid" jdbcType="INTEGER" />
    <result column="Advise_name" property="adviseName" jdbcType="VARCHAR" />
    <result column="Advise_Adminflag" property="adviseAdminflag" jdbcType="INTEGER" />
    <result column="Advise_title" property="adviseTitle" jdbcType="VARCHAR" />
    <result column="Advise_addate" property="adviseAddate" jdbcType="TIMESTAMP" />
    <result column="Advise_isRead" property="adviseIsread" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hedgehog.domain.biz_AdviseWithBLOBs" extends="BaseResultMap" >
    <result column="Advise_ontent" property="adviseOntent" jdbcType="LONGVARCHAR" />
    <result column="Advise_reply" property="adviseReply" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    AdviseID, Advise_name, Advise_Adminflag, Advise_title, Advise_addate, Advise_isRead
  </sql>
  <sql id="Blob_Column_List" >
    Advise_ontent, Advise_reply
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hedgehog.domain.biz_AdviseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_Advise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hedgehog.domain.biz_AdviseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_Advise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_Advise
    where AdviseID = #{adviseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from biz_Advise
    where AdviseID = #{adviseid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hedgehog.domain.biz_AdviseExample" >
    delete from biz_Advise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hedgehog.domain.biz_AdviseWithBLOBs" >
    insert into biz_Advise (AdviseID, Advise_name, Advise_Adminflag, 
      Advise_title, Advise_addate, Advise_isRead, 
      Advise_ontent, Advise_reply)
    values (#{adviseid,jdbcType=INTEGER}, #{adviseName,jdbcType=VARCHAR}, #{adviseAdminflag,jdbcType=INTEGER}, 
      #{adviseTitle,jdbcType=VARCHAR}, #{adviseAddate,jdbcType=TIMESTAMP}, #{adviseIsread,jdbcType=TINYINT}, 
      #{adviseOntent,jdbcType=LONGVARCHAR}, #{adviseReply,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hedgehog.domain.biz_AdviseWithBLOBs" >
    insert into biz_Advise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adviseid != null" >
        AdviseID,
      </if>
      <if test="adviseName != null" >
        Advise_name,
      </if>
      <if test="adviseAdminflag != null" >
        Advise_Adminflag,
      </if>
      <if test="adviseTitle != null" >
        Advise_title,
      </if>
      <if test="adviseAddate != null" >
        Advise_addate,
      </if>
      <if test="adviseIsread != null" >
        Advise_isRead,
      </if>
      <if test="adviseOntent != null" >
        Advise_ontent,
      </if>
      <if test="adviseReply != null" >
        Advise_reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adviseid != null" >
        #{adviseid,jdbcType=INTEGER},
      </if>
      <if test="adviseName != null" >
        #{adviseName,jdbcType=VARCHAR},
      </if>
      <if test="adviseAdminflag != null" >
        #{adviseAdminflag,jdbcType=INTEGER},
      </if>
      <if test="adviseTitle != null" >
        #{adviseTitle,jdbcType=VARCHAR},
      </if>
      <if test="adviseAddate != null" >
        #{adviseAddate,jdbcType=TIMESTAMP},
      </if>
      <if test="adviseIsread != null" >
        #{adviseIsread,jdbcType=TINYINT},
      </if>
      <if test="adviseOntent != null" >
        #{adviseOntent,jdbcType=LONGVARCHAR},
      </if>
      <if test="adviseReply != null" >
        #{adviseReply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hedgehog.domain.biz_AdviseExample" resultType="java.lang.Integer" >
    select count(*) from biz_Advise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update biz_Advise
    <set >
      <if test="record.adviseid != null" >
        AdviseID = #{record.adviseid,jdbcType=INTEGER},
      </if>
      <if test="record.adviseName != null" >
        Advise_name = #{record.adviseName,jdbcType=VARCHAR},
      </if>
      <if test="record.adviseAdminflag != null" >
        Advise_Adminflag = #{record.adviseAdminflag,jdbcType=INTEGER},
      </if>
      <if test="record.adviseTitle != null" >
        Advise_title = #{record.adviseTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.adviseAddate != null" >
        Advise_addate = #{record.adviseAddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adviseIsread != null" >
        Advise_isRead = #{record.adviseIsread,jdbcType=TINYINT},
      </if>
      <if test="record.adviseOntent != null" >
        Advise_ontent = #{record.adviseOntent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.adviseReply != null" >
        Advise_reply = #{record.adviseReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update biz_Advise
    set AdviseID = #{record.adviseid,jdbcType=INTEGER},
      Advise_name = #{record.adviseName,jdbcType=VARCHAR},
      Advise_Adminflag = #{record.adviseAdminflag,jdbcType=INTEGER},
      Advise_title = #{record.adviseTitle,jdbcType=VARCHAR},
      Advise_addate = #{record.adviseAddate,jdbcType=TIMESTAMP},
      Advise_isRead = #{record.adviseIsread,jdbcType=TINYINT},
      Advise_ontent = #{record.adviseOntent,jdbcType=LONGVARCHAR},
      Advise_reply = #{record.adviseReply,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update biz_Advise
    set AdviseID = #{record.adviseid,jdbcType=INTEGER},
      Advise_name = #{record.adviseName,jdbcType=VARCHAR},
      Advise_Adminflag = #{record.adviseAdminflag,jdbcType=INTEGER},
      Advise_title = #{record.adviseTitle,jdbcType=VARCHAR},
      Advise_addate = #{record.adviseAddate,jdbcType=TIMESTAMP},
      Advise_isRead = #{record.adviseIsread,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hedgehog.domain.biz_AdviseWithBLOBs" >
    update biz_Advise
    <set >
      <if test="adviseName != null" >
        Advise_name = #{adviseName,jdbcType=VARCHAR},
      </if>
      <if test="adviseAdminflag != null" >
        Advise_Adminflag = #{adviseAdminflag,jdbcType=INTEGER},
      </if>
      <if test="adviseTitle != null" >
        Advise_title = #{adviseTitle,jdbcType=VARCHAR},
      </if>
      <if test="adviseAddate != null" >
        Advise_addate = #{adviseAddate,jdbcType=TIMESTAMP},
      </if>
      <if test="adviseIsread != null" >
        Advise_isRead = #{adviseIsread,jdbcType=TINYINT},
      </if>
      <if test="adviseOntent != null" >
        Advise_ontent = #{adviseOntent,jdbcType=LONGVARCHAR},
      </if>
      <if test="adviseReply != null" >
        Advise_reply = #{adviseReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where AdviseID = #{adviseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hedgehog.domain.biz_AdviseWithBLOBs" >
    update biz_Advise
    set Advise_name = #{adviseName,jdbcType=VARCHAR},
      Advise_Adminflag = #{adviseAdminflag,jdbcType=INTEGER},
      Advise_title = #{adviseTitle,jdbcType=VARCHAR},
      Advise_addate = #{adviseAddate,jdbcType=TIMESTAMP},
      Advise_isRead = #{adviseIsread,jdbcType=TINYINT},
      Advise_ontent = #{adviseOntent,jdbcType=LONGVARCHAR},
      Advise_reply = #{adviseReply,jdbcType=LONGVARCHAR}
    where AdviseID = #{adviseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hedgehog.domain.biz_Advise" >
    update biz_Advise
    set Advise_name = #{adviseName,jdbcType=VARCHAR},
      Advise_Adminflag = #{adviseAdminflag,jdbcType=INTEGER},
      Advise_title = #{adviseTitle,jdbcType=VARCHAR},
      Advise_addate = #{adviseAddate,jdbcType=TIMESTAMP},
      Advise_isRead = #{adviseIsread,jdbcType=TINYINT}
    where AdviseID = #{adviseid,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 
		<bean id="LocalSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation"
		value="classpath:hibernate.cfg.xml">
		</property>
		</bean>
		com.microsoft.jdbc.sqlserver.SQLServerDriver
		net.sourceforge.jtds.jdbc.Driver
	-->

	<!--DataBase Configuration-->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>net.sourceforge.jtds.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:jtds:sqlserver://localhost:1433;DatabaseName=FrameWork108_watiao</value>
		</property>
		<property name="username">
			<value>sa</value>
		</property>
		<property name="password">
			<value>admin</value>
		</property>
	</bean>
  <!--<start id="bean_persistenceAnnotationBeanPostProcessor"/>--> 
<!--<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>-->
  <!--<end id="bean_persistenceAnnotationBeanPostProcessor"/>-->
	<!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- enable autowire -->
<!--    <context:annotation-config />-->
    
    <!-- enable transaction demarcation with annotations -->
     <tx:annotation-driven />
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->

	<!--Business Configuration-->
<!--	<bean id="newsservice" class="com.hedgehog.service.NewsServiceMapperImpl"/>-->

	
	<!-- define the MyBatis SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
<!--        <property name="configLocation" value="classpath:mybatis-config.xml" />        -->
    </bean>

<!-- scan for mappers and let them be autowired (dao bean已经在配置文件里面，所以没有配置扫描dao所在的package,在service里面也能够autowried dao-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hedgehog.mapper" />
    </bean>
<!--   <context:component-scan base-package="com.hedgehog.service" />-->
 <context:component-scan base-package="com.hedgehog.service" />

  
</beans>